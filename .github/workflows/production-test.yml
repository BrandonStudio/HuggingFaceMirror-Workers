name: Production Test
description: Run HuggingFace client in practice.
on:
  schedule:
    - cron: '0 0 * * 0' # Weekly on Sunday at 00:00
  workflow_dispatch:
  workflow_call:
    secrets:
      HF_ENDPOINT:
        required: true

jobs:
  production-test:
    runs-on: ubuntu-latest
    steps:
      - name: Block HuggingFace domains with dnsmasq
        if: ${{ env.PROXY_ALL_HOST }} == '1'
        run: |
          sudo apt-get update
          sudo apt-get install -y dnsmasq

          echo "address=/huggingface.co/0.0.0.0" | sudo tee -a /etc/dnsmasq.conf
          echo "address=/.huggingface.co/0.0.0.0" | sudo tee -a /etc/dnsmasq.conf
          echo "address=/hf.co/0.0.0.0" | sudo tee -a /etc/dnsmasq.conf
          echo "address=/.hf.co/0.0.0.0" | sudo tee -a /etc/dnsmasq.conf

          echo "nameserver 127.0.0.1" | sudo tee /etc/resolv.conf

          sudo service dnsmasq start || journalctl -u dnsmasq

          echo "Testing DNS blocking:"
          nslookup huggingface.co || echo "✓ huggingface.co blocked"
          nslookup hf.co || echo "✓ hf.co blocked"
          nslookup cdn-lfs-1.hf.co || echo "✓ *.hf.co blocked"
      - uses: actions/setup-python@v6
        with:
          python-version: '3.12'
      - name: Install dependencies
        run: |
          python -m pip install huggingface_hub[cli] transformers
      - name: Download a model
        env:
          HF_ENDPOINT: ${{ secrets.HF_ENDPOINT }}
          MODEL_ID: 'Qwen/Qwen3-4B'
          FORCE_COLOR: '1'
          CLICOLOR_FORCE: '1'
          PYTHONUNBUFFERED: '1'
        run: |
          hf download $MODEL_ID \
            > >(sed -u "s|${{ env.HF_ENDPOINT }}|ENDPOINT|g") \
            2> >(sed -u "s|${{ env.HF_ENDPOINT }}|ENDPOINT|g" >&2)
